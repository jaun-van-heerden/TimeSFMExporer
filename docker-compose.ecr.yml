
services:
  frontend:
    image: 901444280953.dkr.ecr.ap-southeast-2.amazonaws.com/n9490736-jvh:client
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    depends_on:
      - backend

  backend:
    image: 901444280953.dkr.ecr.ap-southeast-2.amazonaws.com/n9490736-jvh:server
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - POSTGRES_HOST=db
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    depends_on:
      - db

  service:
    image: 901444280953.dkr.ecr.ap-southeast-2.amazonaws.com/n9490736-jvh:service
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/mydatabase
    ports:
      - "8000:8000"
    depends_on:
      - timesfm
      - db


  timesfm:
    image: 901444280953.dkr.ecr.ap-southeast-2.amazonaws.com/n9490736-jvh:timesfm
    ports:
      - "8001:8001"
    # volumes:
    #  - ./timesfm:/app/timesfm
    depends_on:
      - db

  db:
    # image: postgres:15.8
    image: 901444280953.dkr.ecr.ap-southeast-2.amazonaws.com/n9490736-jvh:db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    # volumes:
      # - postgres_data_ecr:/var/lib/postgresql/data
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgadmin:
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: user@mail.com
  #     PGADMIN_DEFAULT_PASSWORD: mypassword
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - db

# networks:
#   default:
#     name: pgnetwork_ecr

# volumes:
  # postgres_data_ecr: